# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'teacher.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql


class Ui_Teacher(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 500)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        # MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 10, 80, 20))
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 10, 180, 20))
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 320, 60, 20))
        self.label_3.setFont(font)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 360, 60, 20))
        self.label_4.setFont(font)
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 400, 60, 20))
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setObjectName("label_5")

        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(100, 320, 110, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 360, 110, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(100, 400, 110, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(290, 300, 90, 30))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(290, 350, 90, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(290, 400, 90, 30))
        self.pushButton_3.setObjectName("pushButton_3")

        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(20, 40, 200, 190))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(280, 40, 200, 190))
        self.textBrowser_2.setObjectName("textBrowser_2")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.cs_stu)
        self.pushButton_2.clicked.connect(self.update_grade)
        self.pushButton_3.clicked.connect(self.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Teacher"))
        self.label.setText(_translate("MainWindow", "课程名:"))
        self.label_2.setText(_translate("MainWindow", "已选修此课的学生:"))
        self.label_3.setText(_translate("MainWindow", "课号:"))
        self.label_4.setText(_translate("MainWindow", "学号:"))
        self.label_5.setText(_translate("MainWindow", "成绩:"))
        self.pushButton.setText(_translate("MainWindow", "查询"))
        self.pushButton_2.setText(_translate("MainWindow", "更改成绩"))
        self.pushButton_3.setText(_translate("MainWindow", "退出"))

    def tea_ui(self, tea):
        self.tea = tea

        self.textBrowser.setText("%-10s%10s" % ('course_id', 'course_name'))

        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()

        # 教授的课程
        sql = "select course_id,course_name from course where course.tea_id = '%s'" % self.tea
        cursor.execute(sql)
        result = cursor.fetchall()
        for res in result:
            self.textBrowser.append("%-10s%-10s" % (res[0], res[1]))

        cursor.close()
        db.close()

    def cs_stu(self):
        """
        查看选修cs_id且教师为self.tea的学生
        :return:
        """
        self.textBrowser_2.setText("%-8s%-8s%-8s" % ('st_id', 'cs_id', 'score'))
        cs_id = self.lineEdit.text()
        st_id = self.lineEdit_2.text()

        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()

        # sql = "select * from score where cs_id in (select course_id from course where course.tea_id = '%s') and cs_id = '%s' and st_id = '%s'" % (self.tea, cs_id, st_id)
        sql = "select stu_id,cs_id,score from stu_score_tea where stu_id = '%s' and cs_id = '%s'" % (st_id, cs_id)
        try:
            cursor.execute(sql)
            result = cursor.fetchall()
            if len(result) == 0:
                # 选修cs_id的学生
                # sql = "select * from score where cs_id in (select course_id from course where course.tea_id = '%s') and cs_id = '%s'" % (self.tea, cs_id)
                sql = "select stu_id,cs_id,score from stu_score_tea where cs_id = '%s'" % cs_id
                cursor.execute(sql)
                result = cursor.fetchall()
                for res in result:
                    self.textBrowser_2.append("%-8s%-8s%-8s" % (res[0], res[1], res[2]))
            else:
                # 选修cs_id且学号为st_id的学生
                for res in result:
                    self.textBrowser_2.append("%-8s%-8s%-8s" % (res[0], res[1], res[2]))
        except Exception as e:
            print(e)
            db.rollback()

        cursor.close()
        db.close()

    def update_grade(self):
        """
        更新学生成绩
        :return:
        """
        cs_id = self.lineEdit.text()
        st_id = self.lineEdit_2.text()
        score = int(self.lineEdit_3.text())

        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()
        sql = "call update_score('%s', '%s', %d)" % (st_id, cs_id, score)
        try:
            cursor.execute(sql)
            db.commit()
        except Exception as e:
            print(e)
            db.rollback()

        cursor.close()
        db.close()

        self.cs_stu()
