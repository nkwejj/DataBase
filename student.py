# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'student.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql


class Ui_Student(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1500, 610)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 40, 650, 250))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(670, 40, 650, 250))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_3.setGeometry(QtCore.QRect(10, 320, 650, 250))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_4.setGeometry(QtCore.QRect(670, 320, 650, 250))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_5.setGeometry(QtCore.QRect(1330, 320, 120, 50))
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.textBrowser_5.setText("欢迎!")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 90, 20))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(670, 10, 130, 30))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 300, 90, 20))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(670, 300, 90, 20))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(1320, 40, 140, 20))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(1330, 80, 113, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(1340, 130, 90, 30))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(1340, 190, 90, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(1340, 240, 90, 30))
        self.pushButton_3.setObjectName("pushButton_3")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.choose_course)
        self.pushButton_2.clicked.connect(self.delete_course)
        self.pushButton_3.clicked.connect(self.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Student"))
        self.label.setText(_translate("MainWindow", "学生信息"))
        self.label_2.setText(_translate("MainWindow", "已修课程成绩"))
        self.label_3.setText(_translate("MainWindow", "可选课程"))
        self.label_4.setText(_translate("MainWindow", "已选课程"))
        self.label_5.setText(_translate("MainWindow", "请输入课程号:"))
        self.pushButton.setText(_translate("MainWindow", "选课"))
        self.pushButton_2.setText(_translate("MainWindow", "退课"))
        self.pushButton_3.setText(_translate("MainWindow", "关闭"))

    def stu_ui(self, stu):
        self.stu = stu

        self.textBrowser.setText("%15s%15s%8s%8s%8s%15s" % ('student_id', 'student_name', 'gender', 'age', 'grade', 'major'))
        self.textBrowser_2.setText("%15s%15s%15s" % ('st_id', 'cs_id', 'score'))
        self.textBrowser_3.setText("%15s%15s%15s%15s%15s" % ('course_id', 'course_name', 'credit', 'venue', 'term'))
        self.textBrowser_4.setText("%15s%15s%15s%15s%15s" % ('course_id', 'course_name', 'credit', 'venue', 'term'))

        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()

        # 学生信息
        sql = "SELECT * FROM student where student_id = '%s'" % stu
        cursor.execute(sql)
        result = cursor.fetchall()
        self.textBrowser.append("%15s%13s%7s%8s%7s%15s" % (str(result[0][0]), str(result[0][1]), str(result[0][2]), str(result[0][3]), str(result[0][4]), str(result[0][5])))

        # 已修课程成绩
        sql = "SELECT * FROM score where st_id = '%s'" % stu
        cursor.execute(sql)
        result = cursor.fetchall()
        for res in result:
            self.textBrowser_2.append("%15s%15s%15s" % (str(res[0]), str(res[1]), str(res[2])))

        # 可修课程
        sql = "SELECT * FROM course where course_id not in (SELECT cs_id FROM score WHERE st_id = '%s')" % stu
        cursor.execute(sql)
        result = cursor.fetchall()
        for res in result:
            self.textBrowser_3.append("%10s%15s%15s%15s%15s" % (str(res[0]), str(res[1]), str(res[2]), str(res[3]), str(res[4])))

        # 已选课程
        sql = "SELECT * FROM course where course_id in (SELECT cs_id FROM score WHERE st_id = '%s')" % stu
        cursor.execute(sql)
        result = cursor.fetchall()
        for res in result:
            self.textBrowser_4.append("%10s%15s%15s%15s%15s" % (str(res[0]), str(res[1]), str(res[2]), str(res[3]), str(res[4])))

        cursor.close()
        db.close()

    def delete_course(self):
        cou_id = self.lineEdit.text()
        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()
        sql = "select * from score where st_id = '%s' and cs_id = '%s'" % (self.stu, cou_id)
        cursor.execute(sql)
        result = cursor.fetchall()
        # if len(result) != 0:
        #     sql = "delete from score where st_id = '%s' and cs_id = '%s'" % (self.stu, cou_id)
        #     cursor.execute(sql)
        #     db.commit()
        #     self.textBrowser_5.setText("成功退课%s" % cou_id)
        # else:
        #     self.textBrowser_5.setText("%s不存在,无法退课！" % cou_id)
        try:
            if len(result) != 0:
                if cou_id == 'cou9':
                    sql = "start transaction;"
                    cursor.execute(sql)
                    sql = "delete from score where st_id = '%s' and cs_id = '%s';" % (self.stu, cou_id)
                    cursor.execute(sql)
                    sql = "delete from cpp_score where st_id = '%s';" % self.stu
                    cursor.execute(sql)
                    sql = "commit;"
                    cursor.execute(sql)
                    db.commit()
                else:
                    sql = "delete from score where st_id = '%s' and cs_id = '%s';" % (self.stu, cou_id)
                    cursor.execute(sql)
                    db.commit()
                self.textBrowser_5.setText("成功退课%s" % cou_id)
            else:
                self.textBrowser_5.setText("%s不存在,无法退课！" % cou_id)
        except Exception as e:
            print(e)
            db.rollback()
        cursor.close()
        db.close()
        self.stu_ui(self.stu)

    def choose_course(self):
        cou_id = self.lineEdit.text()
        db = pymysql.connect(host='localhost', user='root', password='123456', database='eams', charset='utf8mb4')
        cursor = db.cursor()

        try:
            sql = "insert into score values ('%s', '%s', 0)" % (self.stu, cou_id)
            cursor.execute(sql)
            db.commit()
            self.textBrowser_5.setText("成功选课%s" % cou_id)
        except Exception as e:
            print(str(e))
            if 'Duplicate' in str(e):
                self.textBrowser_5.setText("%s已经存在，无法重复选课" % cou_id)
            elif 'foreign key constraint' in str(e):
                self.textBrowser_5.setText("%s课程不存在,无法选课!" % cou_id)
            db.rollback()

        cursor.close()
        db.close()
        self.stu_ui(self.stu)


